<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Блог очередного аутиста</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://sadv1r.github.io/</link>
    <atom:link href="http://sadv1r.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 14 Aug 2015 18:53:50 +0300</pubDate>
    <lastBuildDate>Fri, 14 Aug 2015 18:53:50 +0300</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Доброе утро или «Как поднять WordPress блог внутри Docker на DogitalOcean?»</title>
        <description>&lt;p&gt;Ну, для начала, доброе утро!&lt;/p&gt;

&lt;p&gt;Просыпаюсь сегодня, смотрю на часы и понимаю, что слишком рано вчера лег спать. Ну лежу я, значит, такой, плюю в потолок и думаю: код писать рано, мозги не проснулись еще, болтать не с кем (НОРМАЛЬНЫЕ ЛЮДИ ЕЩЕ СПЯТ), а в подписках на YouTube нет ни одного интересного ролика. Думаю… Диалоги вести не с кем, значит нужно «помоноложить». А где моноложить? Опять проблема. Ну, значит пришло, наконец, время поднять еще один нудный блог. Сказано — сделано!&lt;/p&gt;

&lt;p&gt;Долго думать о чем написать не пришлось, идея подала идею, так что под катом разместилась статья о том, как поднять свой блог, да чтоб повеселей…&lt;/p&gt;

&lt;p&gt;Итак, задачу поставили, поднять личный блог. Далее что требуется? Выбрать движок, хостинг и прочие скучные вещи.&lt;/p&gt;

&lt;p&gt;Хоститься я решил на приевшемся уже &lt;a href=&quot;https://www.digitalocean.com/&quot;&gt;DigitalOcean&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Логинимся, нажимаем «Create» и видим такую картину:
&lt;img src=&quot;/resources/img/digitalocean-select-image-wordpress-application.gif&quot; alt=&quot;DigitalOcean Select Wordpress Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ТАК ПРОСТО? Но это ведь не интересно!&lt;/p&gt;

&lt;p&gt;Постойте… «Docker on Ubuntu 14.04». Вот это интереснее. Давно ведь смотрел в его сторону! Выбираем, заполняем оставшиеся поля и нажимаем «Create Droplet». Сразу скажу, я выбрал минимальный план за 5$.&lt;/p&gt;

&lt;p&gt;После того, как наш Droplet создался, коннектимся к серверу и начинаем эксперименты.&lt;/p&gt;

&lt;p&gt;Первым делом я решил проверить версию Docker’а&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker version

Client version: 1.2.0
Client API version: 1.14
Go version (client): go1.3.1
Git commit (client): fa7b24f
OS/Arch (client): linux/amd64
Server version: 1.2.0
Server API version: 1.14
Go version (server): go1.3.1
Git commit (server): fa7b24f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ага, как минимум это означает, что нас не обманули и Docker действительно предустановлен. Затем следовало выбрать движок для блога. Я решил не заморачиваться и выбрать один &lt;a href=&quot;https://registry.hub.docker.com/&quot;&gt;отсюда&lt;/a&gt;. Делается это в терминале так:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker search blog
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/resources/img/docker-search-blog.gif&quot; alt=&quot;Docker search blog&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Выбор у меня оказался простым. Я просто взял единственный блог, помеченный, как OFFICIAL. Выбрав WordPress вспоминаем, что для работы ему нужна база данных. Тащим себе WordPress вместе с MySQL (latest означает, что нам нужна только последняя версия)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker pull mysql:latest
docker pull wordpress:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Проверим, что мы накачали&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker images
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Все верно, теперь мы можем попробовать запустить эти образы&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Сразу оговорюсь, если вы выбрали (как и я) минимальный план DigitalOcean, то есть большая вероятность того, что база у вас не поднимется. Как это проверить?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker ps -a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Смотрим на колонку STATUS. Вы должны увидеть там аптайм контейнера. Иначе там будет что-то вроде «docker Exited (1) 2 seconds ago».&lt;/p&gt;

&lt;p&gt;Итак, наш контейнер не поднялся, как узнать причину? А очень просто&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker logs &amp;lt;id нашего контейнера, указанное в первом столбце выше&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Видим нечто такое:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[ERROR] Plugin &#39;InnoDB&#39; init function returned error. 131005
[ERROR] Plugin &#39;InnoDB&#39; registration as a STORAGE ENGINE failed.
[ERROR] Unknown/unsupported storage engine: InnoDB 131005
[ERROR] Aborting
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;А вот и вышла боком нам экономия на DigitalOcean. Как исправить? &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-12-04&quot;&gt;Добавить Swap раздел нашему дроплету&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Замечательно, теперь все должно быть хорошо. Удалим контейнер, который не удалось поднять прошлый раз&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker rm &amp;lt;id контейнера&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Теперь пробуем поднять базу вновь&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Проверим, как там наша база на этот раз&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker ps -a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;В статусе заветное «Up 3 seconds», ура! Теперь поднимаем WordPress&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run --name some-wordpress --link some-mysql:mysql -p 8080:80 -d wordpress
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Теперь, попробовав снова вывести список контейнеров, мы увидим и контейнер some-wordpress.&lt;/p&gt;

&lt;p&gt;Поздравляю! Теперь заходим на &lt;code&gt;&amp;lt;Droplet IP&amp;gt;:8080&lt;/code&gt; и видим приветственную страницу WordPress.&lt;/p&gt;

&lt;p&gt;Теперь можно со спокойной совестью встать с постели и идти пить чай с печеньками :3&lt;/p&gt;

</description>
        <pubDate>Fri, 14 Aug 2015 18:20:11 +0300</pubDate>
        <link>http://sadv1r.github.io/jekyll/update/2015/08/14/wordpress-blog-in-docker.html</link>
        <guid isPermaLink="true">http://sadv1r.github.io/jekyll/update/2015/08/14/wordpress-blog-in-docker.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve --watch&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 14 Aug 2015 18:20:11 +0300</pubDate>
        <link>http://sadv1r.github.io/jekyll/update/2015/08/14/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://sadv1r.github.io/jekyll/update/2015/08/14/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Сборка Maven проекта в IntelliJ IDEA»</title>
        <description>&lt;p&gt;&lt;img src=&quot;/resources/img/maven-mug-black.jpg&quot; alt=&quot;Maven mug Black&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Добрый вечер! Вернее уже ночь, но я обещал написать этот пост, по этому пью вторую кружку кофе и продолжаю стучать по клавиатуре. Данный пост будет посвящен простейшей настройке билда проекта с помощью &lt;a href=&quot;http://maven.apache.org/&quot;&gt;Maven&lt;/a&gt;. Так как время позднее, приступим от слов к делу.&lt;/p&gt;

&lt;p&gt;1. Для начала откроем наш pom.xml файл и добавим буквально несколько строк&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-assembly-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;archive&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;manifest&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;mainClass&amp;gt;&lt;/span&gt;Main&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mainClass&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/manifest&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/archive&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;В случае, если Main класс у Вас называется по другому, просто измените 8 строку:)  &lt;/p&gt;

&lt;p&gt;2. Теперь в &lt;a href=&quot;http://www.jetbrains.com/idea/&quot;&gt;IDEA&lt;/a&gt;  нажимаем Maven Projects =&amp;gt; наш проект =&amp;gt; Plugins =&amp;gt; assembly =&amp;gt; assembly:assembly (дважды, либо правой кнопкой — Run Maven Build)
Если Вам повезло и проект успешно собрался ликуем и идем наконец спать.
3. Но у меня например сборка не удалась. Идем в Event Log и видим нечто такое&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Error running project [org.apache.maven.plugins:maven-assembly-plugin:2.2-beta-5:assembly]: No valid Maven installation found. Either set the home directory in the configuration dialog or set the M2_HOME environment variable on your system.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Дело в том, что Maven не идет из коробки в Mac OS X 10.9. Проверим&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mvn -version
-bash: mvn: &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;not found&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;4. Не идет и ладно, давайте поставим. Идем на &lt;a href=&quot;http://maven.apache.org/download.cgi&quot;&gt;страницу загрузки Apache Maven&lt;/a&gt; и качаем последнюю версию (на данный момент 3.2.3). Распаковываем архив (например в /Applications/apache-maven-3.2.3)&lt;/p&gt;

&lt;p&gt;5.Теперь, добавим в файл ~/.bash_profile следующие строки&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;M2_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/Applications/apache-maven-3.2.3
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$M2_HOME&lt;/span&gt;/bin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Перезапустим консоль или воспользуемся компандой source .bash_profile и вновь попробуем написать mvn -version. Прекрасно, теперь у нас есть возможность использовать Maven из консоли.&lt;/p&gt;

&lt;p&gt;6. Давайте же дадим такую возможность нашей IDEA.&lt;br /&gt;
Идем IntelliJ IDEA =&amp;gt; Preferences =&amp;gt; Maven и в поле Maven home directory указываем путь до нашего Maven’а (/Applications/apache-maven-3.2.3). Применяем изменения и повторяем шаг номер 2. Спустя небольшой промежуток времени наблюдаем заветное BUILD SUCCESS. Результат нашего творения мы можем лицезреть в директории target нашего проекта.&lt;/p&gt;

&lt;p&gt;Ну вот, вроде бы и все, если не вдаваться в подробности. Более подробная и довольно понятно расписан этап сборки проекта &lt;a href=&quot;http://www.javacreed.com/how-to-use-maven-with-an-application/&quot;&gt;ТУТ&lt;/a&gt;. На сегодня все, кофе уже не спасает, пора на боковую.&lt;/p&gt;

&lt;!-- Ну, для начала, доброе утро!

Просыпаюсь сегодня, смотрю на часы и понимаю, что слишком рано вчера лег спать. Ну лежу я, значит, такой, плюю в потолок и думаю: код писать рано, мозги не проснулись еще, болтать не с кем (НОРМАЛЬНЫЕ ЛЮДИ ЕЩЕ СПЯТ), а в подписках на YouTube нет ни одного интересного ролика. Думаю… Диалоги вести не с кем, значит нужно «помоноложить». А где моноложить? Опять проблема. Ну, значит пришло, наконец, время поднять еще один нудный блог. Сказано — сделано!

Долго думать о чем написать не пришлось, идея подала идею, так что под катом разместилась статья о том, как поднять свой блог, да чтоб повеселей…


Итак, задачу поставили, поднять личный блог. Далее что требуется? Выбрать движок, хостинг и прочие скучные вещи.

Хоститься я решил на приевшемся уже [DigitalOcean](https://www.digitalocean.com/).

Логинимся, нажимаем «Create» и видим такую картину:
![DigitalOcean Select Wordpress Image](/resources/img/digitalocean-select-image-wordpress-application.gif)

ТАК ПРОСТО? Но это ведь не интересно!

Постойте… «Docker on Ubuntu 14.04». Вот это интереснее. Давно ведь смотрел в его сторону! Выбираем, заполняем оставшиеся поля и нажимаем «Create Droplet». Сразу скажу, я выбрал минимальный план за 5$.

После того, как наш Droplet создался, коннектимся к серверу и начинаем эксперименты.

Первым делом я решил проверить версию Docker’а

	docker version

	Client version: 1.2.0
	Client API version: 1.14
	Go version (client): go1.3.1
	Git commit (client): fa7b24f
	OS/Arch (client): linux/amd64
	Server version: 1.2.0
	Server API version: 1.14
	Go version (server): go1.3.1
	Git commit (server): fa7b24f

Ага, как минимум это означает, что нас не обманули и Docker действительно предустановлен. Затем следовало выбрать движок для блога. Я решил не заморачиваться и выбрать один [отсюда](https://registry.hub.docker.com/). Делается это в терминале так:

	docker search blog

![Docker search blog](/resources/img/docker-search-blog.gif)

Выбор у меня оказался простым. Я просто взял единственный блог, помеченный, как OFFICIAL. Выбрав WordPress вспоминаем, что для работы ему нужна база данных. Тащим себе WordPress вместе с MySQL (latest означает, что нам нужна только последняя версия)

	docker pull mysql:latest
	docker pull wordpress:latest

Проверим, что мы накачали

	docker images

Все верно, теперь мы можем попробовать запустить эти образы

	docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql

Сразу оговорюсь, если вы выбрали (как и я) минимальный план DigitalOcean, то есть большая вероятность того, что база у вас не поднимется. Как это проверить?

	docker ps -a

Смотрим на колонку STATUS. Вы должны увидеть там аптайм контейнера. Иначе там будет что-то вроде «docker Exited (1) 2 seconds ago».

Итак, наш контейнер не поднялся, как узнать причину? А очень просто

	docker logs &lt;id нашего контейнера, указанное в первом столбце выше&gt;

Видим нечто такое:

	[ERROR] Plugin &#39;InnoDB&#39; init function returned error. 131005
	[ERROR] Plugin &#39;InnoDB&#39; registration as a STORAGE ENGINE failed.
	[ERROR] Unknown/unsupported storage engine: InnoDB 131005
	[ERROR] Aborting

А вот и вышла боком нам экономия на DigitalOcean. Как исправить? [Добавить Swap раздел нашему дроплету](https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-12-04).

Замечательно, теперь все должно быть хорошо. Удалим контейнер, который не удалось поднять прошлый раз

	docker rm &lt;id контейнера&gt;

Теперь пробуем поднять базу вновь

	docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql

Проверим, как там наша база на этот раз

	docker ps -a

В статусе заветное «Up 3 seconds», ура! Теперь поднимаем WordPress

	docker run --name some-wordpress --link some-mysql:mysql -p 8080:80 -d wordpress

Теперь, попробовав снова вывести список контейнеров, мы увидим и контейнер some-wordpress.

Поздравляю! Теперь заходим на `&lt;Droplet IP&gt;:8080` и видим приветственную страницу WordPress.

Теперь можно со спокойной совестью встать с постели и идти пить чай с печеньками :3 --&gt;

</description>
        <pubDate>Fri, 14 Aug 2015 18:20:11 +0300</pubDate>
        <link>http://sadv1r.github.io/jekyll/update/2015/08/14/maven-assembly.html</link>
        <guid isPermaLink="true">http://sadv1r.github.io/jekyll/update/2015/08/14/maven-assembly.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
